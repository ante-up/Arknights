public class TenPullOdds
{
    public static void main(String[] args)
    {
        int numberOfPulls = 500000;
        //simulates for the average rate of a 6 star including pity
        double avgSixStarRate = sixStarRateSim();
        int totalFiveStarPulled = 0;
        int totalSixStarPulled = 0;
        for (int i = 0; i < numberOfPulls; i++)
        {
            totalFiveStarPulled += TenPullSim(avgSixStarRate)[0];
            totalSixStarPulled += TenPullSim(avgSixStarRate)[1];
        }
        System.out.println("Number of guarantee sessions simulated (10 pulls at a time): " + numberOfPulls);
        System.out.println((double) totalFiveStarPulled/numberOfPulls + " five star units summoned per 10 pull on guaranteed");
        System.out.println((double) totalSixStarPulled/numberOfPulls + " six star units summoned per 10 pull on guaranteed");
    }
    public static int[] TenPullSim(double sixStarAvgRate)
    {
        //array with 5*s and 6*s pulled
        int[] rareUnit = new int[2];

        //no of rare units per 10 pull
        int fiveCounter = 0;
        int sixCounter = 0;

        //10 pulls
        for (int j = 0; j < 10; j++)
        {
            double valueCheck = Math.random();
            if ((valueCheck)<.08)
            {
                fiveCounter++;
            }
            else if ((valueCheck>=1-sixStarAvgRate))
            {
                sixCounter++;
            }
            if (j==9 && fiveCounter==0 && sixCounter == 0)
            {
                fiveCounter++;
            }
        }
        rareUnit[0]=fiveCounter;
        rareUnit[1]=sixCounter;
        return rareUnit;
    }
    public static double sixStarRateSim()
    {
        int sixCounter = 0;
        int pityCounter = 0;
        int iterationNo = 500000;
        for (int i=0; i<iterationNo; i++)
        {
            double valueCheck = Math.random();
            pityCounter++;
            if (pityCounter>=50) {
                if (valueCheck <= (.02 + .02*(pityCounter-49)))
                {
                    sixCounter++;
                    pityCounter = 0;
                }
            }
            else
            {
                if (valueCheck <= .02)
                {
                    sixCounter++;
                    pityCounter=0;
                }
            }
        }
        double sixStarRate = (double) sixCounter/iterationNo;
        return sixStarRate;
    }
}
